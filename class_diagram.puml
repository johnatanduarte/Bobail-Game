@startuml Jogo Bobail
/'biblioteca plantuml'/
/' para mostrar a imagem --> Alt + d'/

skinparam classAttributeIconSize 0
skinparam style strictuml

class Jogo {
    - tela
    - relogio
    - tabuleiro: Tabuleiro
    - peca_selecionada: Peca
    - movimentos_validos: Lista
    - jogo_finalizado: bool
    - estado_jogo: EstadoJogo
    - primeiro_turno: bool
    + __init__()
    + obter_jogador_atual(): str
    + obter_acao_atual(): str
    + executar()
    + tratar_eventos()
    + tratar_clique(pos)
    + desenhar()
}

class Tabuleiro {
    - tabuleiro: Lista[Lista[Peca]]
    - peca_selecionada: Peca
    - movimentos_validos: Lista
    + __init__()
    + configurar_tabuleiro()
    + obter_peca(linha, coluna): Peca
    + mover_peca(peca, nova_linha, nova_coluna)
    + obter_movimentos_validos(peca): Lista
    + esta_bobail_cercado(): bool
}

class Peca {
    - tipo_peca: TipoPeca
    - linha: int
    - coluna: int
    + __init__(tipo_peca, linha, coluna)
    + mover(linha, coluna)
    + obter_cor()
}

enum TipoPeca {
    VAZIO
    VERMELHA
    VERDE
    BOBAIL
}

enum EstadoJogo {
    MOVIMENTO_VERMELHA
    MOVIMENTO_BOBAIL_VERDE
    MOVIMENTO_VERDE
    MOVIMENTO_BOBAIL_VERMELHA
}

class Constantes << (S,#FF7700) static >> {
    + {static} TAMANHO_JANELA: int
    + {static} TAMANHO_TABULEIRO: int
    + {static} TAMANHO_QUADRADO: int
    + {static} RAIO_PECA: int
    + {static} PRETO: tuple
    + {static} BRANCO: tuple
    + {static} VERMELHO: tuple
    + {static} VERDE: tuple
    + {static} AMARELO: tuple
    + {static} COR_TABULEIRO: tuple
    + {static} COR_DESTAQUE: tuple
}

Jogo *-- Tabuleiro : contém
Jogo --> EstadoJogo : usa
Jogo --> TipoPeca : usa
Tabuleiro o-- "muitas" Peca : contém
Peca --> TipoPeca : tem
Jogo ..> Constantes : usa
Tabuleiro ..> Constantes : usa
Peca ..> Constantes : usa

@enduml